{% include "analytics.njk" %}

<script>
  function scrollToId(id) {
    var targetElement = document.getElementById(id);
    var mainElement = document.getElementsByTagName('main')[0];

    if (!targetElement || !mainElement) {
      return true;
    }

    var wide = mainElement.offsetLeft > 0;
    var scrollElement = wide ? mainElement : window;

    scrollElement.scroll({
      top: targetElement.offsetTop,
      left: 0,
      behavior: 'smooth'
    });

    history.replaceState(null, null, '#'+id);

    return false;
  }

  let copyrightyear = document.getElementById("copyrightyear")
  copyrightyear.innerText = "Â© " + new Date().getFullYear() + " Techlahoma Foundation"
  
  // Add observer for the injected Ti.to widget. If it loads, hide the static "Get Tickets" button
  document.addEventListener("DOMContentLoaded", (event) => {

    const titoWidget = document.getElementById("titoWidget");

    const titoWidgetFallback = document.getElementById("titoWidgetFallback");

    // Options for the observer (which mutations to observe)
    const config = { attributes: true, childList: true, subtree: true };

    // Callback function to execute when mutations are observed
    const callback = (mutationList, observer) => {
      for (const mutation of mutationList) {
        if (mutation.type === "childList") {
           titoWidgetFallback.classList.add("hidden");
        }
      }
    };
      
    
    
    // Create an observer instance linked to the callback function
const observer = new MutationObserver(callback);

// Start observing the target node for configured mutations
observer.observe(titoWidget, config);

  });



</script>
